{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Testing \
Tycho has built-in support to execute "headless", "UI" and "SWTBot" test. All of these are supported through the "eclipse-test-plugin" packaging type.\
\
For Maven users, this is slightly different than the typical Maven way since tests are normally stored along side with the code being tested, whereas the Eclipse convention that is followed by Tycho separates the main code from the tests in individual project.\
\
Which tests are executed?\
By default Tycho will execute all the tests found in any package contained in the test plugin. \
\
This means that the smallest pom.xml for executing tests is the following:\
\
<TO FILL>\
\
Running UI tests\
In order to execute UI tests, some additional configuration is needed to tell tycho to use the test harness.\
This can be done by adding the following XML markup\
\
<TO FILL>\
\
Running SWTBot tests\
The execution of SWTBot tests requires a bit more setup.\
\
\
Controlling the arguments passed to the execution of the tests\
        <build>\
                <plugins>\
                        <plugin>\
                                <groupId>org.sonatype.tycho</groupId>\
                                <artifactId>maven-osgi-test-plugin</artifactId>\
                                <version>$\{tycho-version\}</version>\
                                <configuration>\
                                        <testSuite>org.eclipse.equinox.p2.tests.ui</testSuite>\
                                        <testClass>org.eclipse.equinox.p2.tests.ui.AutomatedTests\
                                        </testClass>\
                                        <argLine>-Xmx512m -XstartOnFirstThread</argLine>\
                                        <useUIHarness>true</useUIHarness>\
                                </configuration>\
                        </plugin>\
                </plugins>\
        </build>\
\
Controlling the tests being executed\
As we've seen by default Tycho executes all the tests found in the test bundle. However, this can be controlled more precisely with the help of the testSuite and the testClass configuration flags as used in figure XXX.\
\
Controlling additional dependencies\
By default, when Tycho runs the tests, the only bundles that will be executed are those included in the transitive closure of the test bundle and therefore the bundles being tested. However in a number of cases, it is important to execute the tests in a wider context such as the complete application or just additional bundles. For that case Tycho provides a facility to add additional bundles using the following XML.\
\
\
The maven-osgi-test-plugin used to run tests supports many additional configuration parameters, such as controlling additional dependencies, setting start level for bundles, etc. For more see <TO FILL>\
\
}