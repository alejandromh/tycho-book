{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Miscellaneous\
\
* Signing bundles \
Signing bundles is very important in order to prevent your users from rogue bundles. It will \
The signature will be verified by p2 at install time.\
\
This uses the maven-jar-signing plugin.\
\
* Generating JavaDoc\
\
Javadoc can be generated simply by using the standard maven-javadoc-plugin [1] along with all its configuration options. The most simple example would be to execute\
\
mvn javadoc:javadoc\
\
which will create javadoc for each module in target/apidocs/.\
\
[1] http://maven.apache.org/plugins/maven-javadoc-plugin/\
\
* Generating source bundles\
\
Source bundle generation is switched on using the following snippet to be inserted in the build/plugins section of your (parent) POM:\
\
  <!-- enable source bundle generation -->\
      <plugin>\
        <groupId>org.sonatype.tycho</groupId>\
        <artifactId>maven-osgi-source-plugin</artifactId>\
        <version>${tycho-version}</version>\
        <executions>\
          <execution>\
            <id>plugin-source</id>\
            <goals>\
              <goal>plugin-source</goal>\
            </goals>\
          </execution>\
        </executions>\
      </plugin>\
\
This will create an eclipse source bundle jar along with each bundle jar in the target/ folder of the module.\
By convention, the source bundle SymbolicName is the bundle SymbolicName with ".source" appended.\
Generated source bundles can then be included in a source feature which can be created just as any other feature. Automatic source feature generation may be added in a later version of Tycho.\
\
* Quality analysis tools\
** Running PMD\
** Running FindBugs\
** Running Emma (code coverage)}