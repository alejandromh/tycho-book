{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue128;\red63\green127\blue127;\red127\green0\blue127;
\red42\green0\blue255;\red63\green95\blue191;}
\margl1440\margr1440\vieww11480\viewh13340\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Building an OSGi bundle / plugin\
In this section we are reviewing the simplest, though not most concise, way of building an OSGi bundle. The example shown in this section is not meant to be used as a starting point but solely in the context of an introduction to group together all the relevant bits of configuration in one place. \
\
\
Beside the source code, the example contains three relevant files.\
The manifest.mf which captures the dependencies of the bundle being built.\
The build.properties which describes the set of files that will be included in the final archive (bin.includes property)\
The pom.xml which indicates Maven how to build this project.\
We will not be detailing the functioning of the other files and only focus on the pom.xml\
\
\
\pard\pardeftab720

\f1\fs22 \cf2 <\cf3 project\cf0  \cf4 xmlns\cf0 =\cf5 "http://maven.apache.org/POM/4.0.0"\cf0  \cf4 xmlns:xsi\cf0 =\cf5 "http://www.w3.org/2001/XMLSchema-instance"\cf0 \
	\cf4 xsi:schemaLocation\cf0 =\cf5 "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"\cf2 >\cf0 \
	\cf2 <\cf3 modelVersion\cf2 >\cf0 4.0.0\cf2 </\cf3 modelVersion\cf2 >\cf0 \
	\
	\cf2 <\cf3 groupId\cf2 >\cf0 tycho.tutorial\cf2 </\cf3 groupId\cf2 >\cf0 \
	\cf2 <\cf3 artifactId\cf2 >\cf0 example1\cf2 </\cf3 artifactId\cf2 >\cf0 \
	\cf2 <\cf3 version\cf2 >\cf0 1.0.0-SNAPSHOT\cf2 </\cf3 version\cf2 >\cf0 \
	\cf2 <\cf3 packaging\cf2 >\cf0 eclipse-\ul plugin\cf2 \ulnone </\cf3 packaging\cf2 >\cf0 \
\
	\cf2 <\cf3 properties\cf2 >\cf0 \
		\cf2 <\cf3 tycho-version\cf2 >\cf0 0.11.0-SNAPSHOT\cf2 </\cf3 tycho-version\cf2 >\cf0 \
	\cf2 </\cf3 properties\cf2 >\cf0 \
\
	\cf2 <\cf3 repositories\cf2 >\cf0 \
		\cf6 <!-- configure p2 repository to resolve against -->\cf0 \
		\cf2 <\cf3 repository\cf2 >\cf0 \
			\cf2 <\cf3 id\cf2 >\cf0 \ul \ulc0 helios\cf2 \ulnone </\cf3 id\cf2 >\cf0 \
			\cf2 <\cf3 layout\cf2 >\cf0 p2\cf2 </\cf3 layout\cf2 >\cf0 \
			\cf2 <\cf3 url\cf2 >\cf0 http://download.eclipse.org/releases/helios\cf2 </\cf3 url\cf2 >\cf0 \
		\cf2 </\cf3 repository\cf2 >\cf0 \
	\cf2 </\cf3 repositories\cf2 >\cf0 \
\
	\cf2 <\cf3 build\cf2 >\cf0 \
		\cf2 <\cf3 plugins\cf2 >\cf0 \
			\cf2 <\cf3 plugin\cf2 >\cf0 \
				\cf6 <!-- enable \ul tycho\ulnone  build extension -->\cf0 \
				\cf2 <\cf3 groupId\cf2 >\cf0 org.sonatype.tycho\cf2 </\cf3 groupId\cf2 >\cf0 \
				\cf2 <\cf3 artifactId\cf2 >\cf0 \ul \ulc0 tycho\ulnone -\ul maven\ulnone -\ul plugin\cf2 \ulnone </\cf3 artifactId\cf2 >\cf0 \
				\cf2 <\cf3 version\cf2 >\cf0 $\{\ul tycho\ulnone -version\}\cf2 </\cf3 version\cf2 >\cf0 \
				\cf2 <\cf3 extensions\cf2 >\cf0 true\cf2 </\cf3 extensions\cf2 >\cf0 \
			\cf2 </\cf3 plugin\cf2 >\cf0 \
			\cf2 <\cf3 plugin\cf2 >\cf0 \
				\cf2 <\cf3 groupId\cf2 >\cf0 org.sonatype.tycho\cf2 </\cf3 groupId\cf2 >\cf0 \
				\cf2 <\cf3 artifactId\cf2 >\cf0 target-platform-configuration\cf2 </\cf3 artifactId\cf2 >\cf0 \
				\cf2 <\cf3 version\cf2 >\cf0 $\{\ul tycho\ulnone -version\}\cf2 </\cf3 version\cf2 >\cf0 \
				\cf2 <\cf3 configuration\cf2 >\cf0 \
					\cf6 <!-- recommended: use p2-based target platform resolver -->\cf0 \
					\cf2 <\cf3 resolver\cf2 >\cf0 p2\cf2 </\cf3 resolver\cf2 >\cf0 \
				\cf2 </\cf3 configuration\cf2 >\cf0 \
			\cf2 </\cf3 plugin\cf2 >\cf0 \
		\cf2 </\cf3 plugins\cf2 >\cf0 \
	\cf2 </\cf3 build\cf2 >\cf0 \
\
\cf2 </\cf3 project\cf2 >\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
\
1) Identification of what is being built\
\pard\pardeftab720\ql\qnatural

\f1\fs22 \cf0 	\cf2 <\cf3 groupId\cf2 >\cf0 tycho.tutorial\cf2 </\cf3 groupId\cf2 >\cf0 \
	\cf2 <\cf3 artifactId\cf2 >\cf0 example1\cf2 </\cf3 artifactId\cf2 >\cf0 \
	\cf2 <\cf3 version\cf2 >\cf0 1.0.0-SNAPSHOT\cf2 </\cf3 version\cf2 >\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\ql\qnatural\pardirnatural
\cf0 The groupId is a necessity to "make the Maven gods happy".\
The artifactId is the name given to what is being built. It needs to be a copy of the Bundle-SymbolicName attribute as found in manifest.mf.\
Similarly to the artifactId, the version needs to match the Bundle-Version attribute as found in the manifest.mf. \
\
The slight twist here comes from the fact that versions used in manifest end with .qualifier and that the one specified in the pom.xml end with  -SNAPSHOT. For example 1.0.0.qualifier becomes 1.0.0-SNAPSHOT. \
\
TO FILL the version number schemes are not a one to one mapping.\
Note that the semantics of .qualifier is not exactly the same than -SNAPSHOT\
\
Note: The duplication of information between the manifest and the pom is unfortunate but is one that we have to leave with for the time being. This repetition can be the cause of build failures when the values are not in sync, and it would lead to the following message:\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 [ERROR] Failed to execute goal org.sonatype.tycho:maven-osgi-packaging-plugin:0.11.0-SNAPSHOT:validate-version (default-validate-version) on project example1: Unqualified OSGi version 1.0.0.qualifier must match unqualified Maven version 0.0.1-SNAPSHOT for SNAPSHOT builds -> [Help 1]\
\
\
2) What is being built\
\pard\pardeftab720

\f1\fs22 \cf2 	<\cf3 packaging\cf2 >\cf0 eclipse-\ul plugin\cf2 \ulnone </\cf3 packaging	
\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 This part of the markup tells Maven that what is being built is an eclipse plugin. This packaging type has nothing specific to eclipse and should be used to build OSGi bundles.\
Tycho defines additional packaging types that will be presented in the following sections.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \
3) Repositories\
Much like in Maven, the repositories section list the repositories that must be used to resolve the dependencies against/\
\pard\pardeftab720

\f1\fs22 \cf0 	\cf2 <\cf3 repositories\cf2 >\cf0 \
		\cf6 <!-- configure p2 repository to resolve against -->\cf0 \
		\cf2 <\cf3 repository\cf2 >\cf0 \
			\cf2 <\cf3 id\cf2 >\cf0 \ul \ulc0 helios\cf2 \ulnone </\cf3 id\cf2 >\cf0 \
			\cf2 <\cf3 layout\cf2 >\cf0 p2\cf2 </\cf3 layout\cf2 >\cf0 \
			\cf2 <\cf3 url\cf2 >\cf0 http://download.eclipse.org/releases/helios\cf2 </\cf3 url\cf2 >\cf0 \
		\cf2 </\cf3 repository\cf2 >\cf0 \
	\cf2 </\cf3 repositories\cf2 >\

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 This section tells tycho the p2 repository in which dependencies can be resolved.\
At resolution time, tycho will analyze the dependency of the bundles and try to resolve the import package and require bundle using this p2 repository.\
Note that it is important to specify the layout as p2, since it is what indicates Maven that this is not a regular maven repository.\
\
\
\
\
4) Build section\
In this example, the section contains a lot of boilerplate markup that instruct Maven about two things.\
First, the reference to the tycho-maven-plugin, instructs it that tycho is a Maven extension that hooks in Maven at a very low level\
\
\pard\pardeftab720\ql\qnatural

\f1\fs22 \cf0         \cf2 <\cf3 groupId\cf2 >\cf0 org.sonatype.tycho\cf2 </\cf3 groupId\cf2 >\cf0 \
        \cf2 <\cf3 artifactId\cf2 >\cf0 \ul tycho\ulnone -\ul maven\ulnone -\ul plugin\cf2 \ulnone </\cf3 artifactId\cf2 >\cf0 \
        \cf2 <\cf3 version\cf2 >\cf0 0.11.0-SNAPSHOT\cf2 </\cf3 version\cf2 >\cf0 \
        \cf2 <\cf3 extensions\cf2 >\cf0 true\cf2 </\cf3 extensions\cf2 >\

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 Second is the indication that the p2 resolver should be used.\
\pard\pardeftab720\ql\qnatural

\f1\fs22 \cf0 	 \cf2 <\cf3 groupId\cf2 >\cf0 org.sonatype.tycho\cf2 </\cf3 groupId\cf2 >\cf0 \
        \cf2 <\cf3 artifactId\cf2 >\cf0 target-platform-configuration\cf2 </\cf3 artifactId\cf2 >\cf0 \
        \cf2 <\cf3 version\cf2 >\cf0 0.11.0-SNAPSHOT\cf2 </\cf3 version\cf2 >\
\
5) Telling tycho what to include in the jar being produced\
The output of this build is a jar. In order to know what to add, to the jar, tycho will use the value of the bin.includes property as defined in the build.properties.\
\
* Executing the build.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 mvn clean install\
\
While executing the build, you will notice The execution of the build will cause something produce \
The execution of a build goes as follow\'85. \
TO FILL\
\
The result of the build is stored in the target folder at the root of the plugin being built. In the case of our example a file called example1-1.0.0-SNAPSHOT.jar can be found. The target folder contains other files that have been created as part of the build.\
}